server:
  context-path: /
  port: 3000
  
eureka:
  client:
    # 是否将自己注册到Eureka服务中，默认为true
    registerWithEureka: true
    service-url:
      ## 单点配置:
#      defaultZone: http://eureka.likegirl.cn/eureka/
      ## 高可用配置
      ## defaultZone: http://:8001/eureka/,http://eureka2:8002/eureka/
      defaultZone: http://user:password123@192.168.11.45:8761///eureka   #设置了账号密码

spring:
  application:
      name: api
  http:
    encoding:
      charset: UTF-8
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: NON_NULL
  thymeleaf:
    cache: false
    check-template: true
    check-template-location: true
    content-type: text/html
    encoding: UTF-8
    mode: LEGACYHTML5
    prefix: classpath:/templates/
    suffix: .html
  profiles:
    active: pro
  aop:
    proxy-target-class: true
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    # 启用默认的资源处理
    add-mappings: false
  cloud:
    loadbalancer:
      retry:
        enabled: true

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  type-aliases-package: cn.likegirl.rt.model
  mapper-locations: classpath:cn/likegirl/rt/mapping/*.xml

mapper:
  identity: MYSQL
  # 是否判断字符串类型 !=''
  notEmpty: false
  # 驼峰转下划线小写形式
  style: camelhumpAndLowercase
  # 可以控制是否支持（getter 和 setter）在方法上使用注解，默认false
  enableMethodAnnotation: true
  mappers: cn.likegirl.rt.config.database.BaseMapper

logging:
  level:
#    root: debug
    cn.likegirl.rt: debug
    tk.mybatis: trace

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

app:
  message:
    basename: classpath:i18n/messages

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          # 官方默认为： THREAD
          # strategy 可以取THREAD 和 SEMAPHORE 两种策略，两种策略分别是：
          # THREAD，HystrixCommand.run()在一个单独的线程中执行，即下游依赖的请求在一个单独的线程中隔离，并发请求数收到线程中线程数的限制。
          # SEMAPHORE，HystrixCommand.run()在调用线程中执行，即下游依赖请求在当前调用线程中执行，并发请求受信号量计数的限制
#          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 12000

tms-mgr:
  ribbon:
    ## 只适应ribbon组件 下面这个配置 并未卵~~~
    ConnectTimeout: 2000   # 链接超时时间
    ReadTimeout: 3000     # 处理超时时间
    # 是否对所有的请求都进行重试
    OkToRetryOnAllOperations: true
    # 切换实例的重试次数
    MaxAutoRetriesNextServer: 3
    # 对当前实例的重试次数
    ribbon.MaxAutoRetries: 0
# 自定义
custom:
  rest:
    connect-timeout: 2000
    connection-request-timeout: 2000
    read-timeout: 5000

#feign的配置项:
feign:
  ##启动feign的断路器功能
  hystrix:
    enabled: true
  httpclient:
    enabled: true
  compression:
    request:
      min-request-size: 2048
      mime-types:
        - text/xml, application/xml, application/json
    response:
      enabled: true

endpoints:
  shutdown:
    enabled: true
security:
  basic:
    enabled: false
  info:
    enabled: true
management:
  security:
    enabled: false
  context-path: /actuator
  address: 127.0.0.1
  port: 13000
